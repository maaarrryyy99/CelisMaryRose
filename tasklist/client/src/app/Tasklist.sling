import jk.widget.common

class is TitledWidget #widget:

ui LayerWidget
{
    VerticalScrollerWidget {
        scrollBarDisabled = true
        LayerWithBackgroundColorWidget container {
            color = Color.instance("#b3e3e1")
            VerticalBoxWidget list {
                margin = context.getHeightValue("5mm")
                spacing = context.getHeightValue("5mm")

                LabelWidget myLabel {
                    text ="ADD TASK"
                    textColor = Color.black()
                }

                TextInputWidget addingTaskTextbox {
                    type = TextInputWidget.TYPE_NAME
                    placeholder = "Add Task Here"
                    backgroundColor = Color.black()
                    fontSize = context.getHeightValue("5mm")
                    padding = context.getHeightValue("1mm")
                }
                TextButtonWidget btnAddTask : 0.1 {
                    text = "Click to Add Task"
                    backgroundColor = Color.instance("#615f5d")
                    fontSize = context.getHeightValue("5mm")
                    clickHandler = func {
                        onAddingTaskClicked()
                    }
                }
            }
        }
    }
}

func initializeWidget override
{
    base.initializeWidget()
    APIClient.getInstance().getTasks(func(response as DynamicMap) {
        var data = assert response.getDynamicMap("data")
        var records = data.getDynamicVector("records")
        if not records || records.getSize() < 1 {
            list.addWidget(AlignWidget.forWidget(context, LabelWidget.forText(context, "No Record")), 1.0)
        }
        else {
            foreach record as DynamicMap in records.toVector() {
                var task = record.getString("name") .. " - " .. record.getString("description")
                var lblTask = LabelWidget.forText(context, task)
                var hbox = HorizontalBoxWidget.forContext(context, 0, context.getHeightValue("0.5mm"))
                hbox.addWidget(lblTask)
                list.addWidget(AlignWidget.forWidget(context, hbox), 1.0)
            }
        }
    })
}

func getWidgetTitle as string:
    return "Task list"

func onAddingTaskClicked
{

}
